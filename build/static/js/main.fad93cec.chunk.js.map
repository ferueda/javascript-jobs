{"version":3,"sources":["utils/helpers.js","hooks/useJobsFetch.js","components/Button.js","components/JobDescription.js","components/JobCard.js","components/Skeletons/SkeletonJobCard.js","components/JobList.js","components/Search.js","components/Hero.js","components/Nav.js","components/SearchGuide.js","App.js","index.js"],"names":["techFilters","jobsFetchReducer","state","action","type","isLoading","isError","jobs","payload","hasMore","remainingRows","totalRows","filters","skip","city","includes","filter","f","trim","toLowerCase","PrimaryLinkBtn","styled","a","TransparentLinkBtn","PrimaryRegularBtn","button","LinkButton","color","children","href","role","target","ButtonContainer","div","ContentContainer","JobDescription","data","apply","dangerouslySetInnerHTML","__html","JobCardContainer","active","CompanyThumbContainer","CompanyThumbImg","img","JobInfoContainer","SalaryContainer","TagsContainer","Tags","span","TimeContainer","React","memo","id","thumb","company","jobTitle","location","salary","tags","timestamp","description","handleActiveChange","cbFunc","today","Date","time","d1","d2","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","getDateDiff","Fragment","ref","onClick","data-testid","src","alt","companyName","companyNameArray","split","length","slice","setCompanyLogoFromName","map","tag","key","name","StyledDiv","Thumb","InfoContainer","Row","width","height","Tag","SkeletonJobCard","ThreeSkeletonJobCards","JobsContainer","JobListTitle","h2","loading","dispatchJobsFetch","useState","isActive","setIsActive","observer","useRef","lastJobCardRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","jobId","console","log","job","index","company_logo","company_name","job_title","content_html","apply_link","Container","HeroInput","input","InputBtn","FlexForm","form","CitySelect","select","Search","placeholder","handleSearch","handleCitySelection","search","setSearch","onSubmit","event","aria-label","value","onChange","xmlns","viewBox","fill","d","HeroContainer","HeroTitle","h1","StyledNav","nav","TechContainer","Tech","imgSrc","tech","handleFilters","className","Nav","logosSrc","logo","SearchGuideContainer","SearchSpan","SearchGuide","handleTagRemove","GlobalStyle","createGlobalStyle","App","useReducer","localStorage","getItem","isMounted","useEffect","setItem","didCancel","fetch","baseURL","tagParams","replace","join","generateURL","then","res","json","pagination","catch","useJobsFetch","preventDefault","Boolean","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad93cec.chunk.js","sourcesContent":["import Fuse from 'fuse.js';\r\n\r\nexport const techFilters = [\r\n  'Front end',\r\n  'Back end',\r\n  'JavaScript',\r\n  'React',\r\n  'Vue',\r\n  'Angular',\r\n  'Node',\r\n  'TypeScript',\r\n];\r\n\r\nexport const setCompanyLogoFromName = (companyName) => {\r\n  const companyNameArray = companyName.split(' ');\r\n  if (companyNameArray.length > 1) {\r\n    return `${companyNameArray[0][0]}${companyNameArray[1][0]}`;\r\n  } else {\r\n    return `${companyName.slice(0, 2)}`;\r\n  }\r\n};\r\n\r\nexport const filterJobs = (jobs, filter) => {\r\n  if (!filter.length) {\r\n    return jobs;\r\n  }\r\n\r\n  if (\r\n    filter.every((f) => techFilters.map((t) => t.toLowerCase()).includes(f))\r\n  ) {\r\n    return jobs.filter((job) =>\r\n      filter.every((f) => job.tags.includes(f.toLowerCase()))\r\n    );\r\n  } else {\r\n    const options = {\r\n      useExtendedSearch: true,\r\n      keys: ['job_title', 'content_text'],\r\n    };\r\n\r\n    const fuse = new Fuse(jobs, options);\r\n\r\n    const modFilters = filter.map((f) => `'${f}`).join(' ');\r\n\r\n    const fuseResult = fuse.search(modFilters);\r\n\r\n    const tagSearch = jobs.filter((job) =>\r\n      filter.every((f) => job.tags.includes(f.toLowerCase()))\r\n    );\r\n\r\n    const idArray = fuseResult.map((job) => job.item.id);\r\n\r\n    tagSearch.forEach((job) => {\r\n      if (!idArray.includes(job.id)) {\r\n        idArray.push(job.id);\r\n      }\r\n    });\r\n\r\n    return jobs.filter((job) => idArray.includes(job.id));\r\n  }\r\n};\r\n\r\nexport const getDateDiff = (d1, d2) => {\r\n  const utc1 = Date.UTC(d1.getFullYear(), d1.getMonth(), d1.getDate());\r\n  const utc2 = Date.UTC(d2.getFullYear(), d2.getMonth(), d2.getDate());\r\n\r\n  return Math.floor((utc2 - utc1) / (1000 * 60 * 60 * 24));\r\n};\r\n\r\nexport const generateURL = (baseURL, city, skip, filters) => {\r\n  if (filters.length) {\r\n    const tagFilters = filters.filter((f) => filters.includes(f.toLowerCase()));\r\n\r\n    const tagParams = tagFilters.map((f) => f.replace(' ', '%20')).join('+');\r\n\r\n    return `${baseURL}?city=${city}&skip=${skip}&q=${tagParams}`;\r\n  } else {\r\n    return `${baseURL}?city=${city}&skip=${skip}`;\r\n  }\r\n};\r\n","import { useEffect, useReducer, useRef } from 'react';\r\nimport { generateURL } from '../utils/helpers';\r\n\r\nconst jobsFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        jobs: [...state.jobs, ...action.payload.jobs],\r\n        hasMore: action.payload.remainingRows > 0,\r\n        totalRows: action.payload.totalRows,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    case 'CHANGE_CITY':\r\n      return {\r\n        ...state,\r\n        jobs: [],\r\n        filters: [],\r\n        skip: 0,\r\n        totalRows: 0,\r\n        city: action.payload.city,\r\n      };\r\n    case 'LOAD_MORE_JOBS':\r\n      return {\r\n        ...state,\r\n        skip: state.skip + 20,\r\n      };\r\n    case 'CHANGE_FILTERS':\r\n      if (state.filters.includes(action.payload)) {\r\n        return {\r\n          ...state,\r\n          jobs: [],\r\n          skip: 0,\r\n          filters: state.filters.filter((f) => f !== action.payload),\r\n          totalRows: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          jobs: [],\r\n          skip: 0,\r\n          filters: [...state.filters, action.payload],\r\n          totalRows: 0,\r\n        };\r\n      }\r\n    case 'SEARCH':\r\n      if (action.payload.trim() !== '') {\r\n        return {\r\n          ...state,\r\n          jobs: [],\r\n          skip: 0,\r\n          totalRows: 0,\r\n          filters: [action.payload.toLowerCase().trim()],\r\n        };\r\n      } else return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useJobsFetch = () => {\r\n  const [\r\n    { jobs, isLoading, isError, hasMore, skip, city, filters, totalRows },\r\n    dispatchJobsFetch,\r\n  ] = useReducer(jobsFetchReducer, {\r\n    jobs: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    hasMore: false,\r\n    skip: 0,\r\n    city: localStorage.getItem('city') || 'sydney',\r\n    filters: [],\r\n    totalRows: 0,\r\n  });\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!isMounted.current) {\r\n      isMounted.current = true;\r\n    } else {\r\n      localStorage.setItem('city', city);\r\n    }\r\n  }, [city]);\r\n\r\n  const baseURL = 'https://au-js-jobs.herokuapp.com/jobs';\r\n  // const baseURL = 'http://localhost:3001/jobs';\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    dispatchJobsFetch({ type: 'FETCH_INIT' });\r\n\r\n    fetch(generateURL(baseURL, city, skip, filters))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!didCancel) {\r\n          dispatchJobsFetch({\r\n            type: 'FETCH_SUCCESS',\r\n            payload: {\r\n              jobs: data.jobs,\r\n              remainingRows: data.pagination.remainingRows,\r\n              totalRows: data.pagination.totalRows,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch(() => dispatchJobsFetch({ type: 'FETCH_FAILURE' }));\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [city, skip, filters]);\r\n\r\n  return {\r\n    isLoading,\r\n    jobs,\r\n    hasMore,\r\n    isError,\r\n    dispatchJobsFetch,\r\n    skip,\r\n    city,\r\n    filters,\r\n    totalRows,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PrimaryLinkBtn = styled.a`\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  padding: 10px 55px;\r\n  border: 2px solid #e74c3c;\r\n  border-radius: 3px;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  transition: all 0.1s ease-out;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransparentLinkBtn = styled(PrimaryLinkBtn)`\r\n  background-color: transparent;\r\n  color: #e74c3c;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      background-color: #e74c3c;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PrimaryRegularBtn = styled.button`\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  padding: 10px 55px;\r\n  border: 2px solid #e74c3c;\r\n  border-radius: 3px;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  transition: all 0.1s ease-out;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransparentRegularBtn = styled(PrimaryRegularBtn)`\r\n  background-color: transparent;\r\n  color: #e74c3c;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      background-color: #e74c3c;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LinkButton = ({ color, children, href }) => {\r\n  return color === 'transparent' ? (\r\n    <TransparentLinkBtn role=\"button\" href={href} target=\"_blank\">\r\n      {children}\r\n    </TransparentLinkBtn>\r\n  ) : (\r\n    <PrimaryLinkBtn role=\"button\" href={href} target=\"_blank\">\r\n      {children}\r\n    </PrimaryLinkBtn>\r\n  );\r\n};\r\n\r\nexport const RegularButton = ({ color, type, children, onClick }) => {\r\n  return color === 'transparent' ? (\r\n    <TransparentRegularBtn type={type || 'button'} onClick={onClick} target=\"_blank\">\r\n      {children}\r\n    </TransparentRegularBtn>\r\n  ) : (\r\n    <PrimaryRegularBtn type={type || 'button'} onClick={onClick}>\r\n      {children}\r\n    </PrimaryRegularBtn>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { LinkButton } from './Button';\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  align-self: center;\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 80%;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.35rem;\r\n  border-bottom: 1px solid #ecf0f1;\r\n  h3 {\r\n    margin: 1rem auto;\r\n  }\r\n  ul {\r\n    list-style-position: inside;\r\n    margin: 1rem auto;\r\n  }\r\n\r\n  li {\r\n    margin-left: 3rem;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  div,\r\n  p {\r\n    margin: 1rem auto;\r\n  }\r\n\r\n  li > p,\r\n  li > div {\r\n    display: inline;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst JobDescription = ({ data, apply }) => {\r\n  return (\r\n    <ContentContainer>\r\n      <ButtonContainer>\r\n        <LinkButton href={apply}>Apply now</LinkButton>\r\n      </ButtonContainer>\r\n      <div dangerouslySetInnerHTML={{ __html: data }}></div>\r\n      <ButtonContainer>\r\n        <LinkButton href={apply}>Apply now</LinkButton>\r\n      </ButtonContainer>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default JobDescription;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport JobDescription from './JobDescription';\r\nimport { setCompanyLogoFromName, getDateDiff } from '../utils/helpers';\r\n\r\nconst JobCardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 3fr 1fr 3fr auto;\r\n  grid-template-rows: 1fr;\r\n  grid-template-areas: 'Thumb Info Salary Tags Time';\r\n  gap: 1.5rem;\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  background-color: ${({ active }) => (active ? '#ecf0f1' : '')};\r\n  border-bottom: 1px solid #ecf0f1;\r\n  transition: 0.1s ease-out;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      background-color: #ecf0f1;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: auto 3fr 1fr auto;\r\n    grid-template-rows: auto;\r\n    grid-template-areas:\r\n      'Thumb Info Info Time'\r\n      'Thumb Tags Tags Time';\r\n    gap: 1rem;\r\n    row-gap: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst CompanyThumbContainer = styled.div`\r\n  grid-area: Thumb;\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  color: #bdc3c7;\r\n  font-size: 3rem;\r\n  font-weight: 900;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 40px;\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst CompanyThumbImg = styled.img`\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst JobInfoContainer = styled.div`\r\n  grid-area: Info;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n\r\n  h2 {\r\n    font-weight: 900;\r\n    font-size: 1.75em;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.5em;\r\n    font-weight: 500;\r\n  }\r\n\r\n  h4 {\r\n    font-size: 1.25em;\r\n    color: #7f8c8d;\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 0.85rem;\r\n\r\n    h3 {\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    h4 {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SalaryContainer = styled.div`\r\n  grid-area: Salary;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  font-size: 1.4rem;\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst TagsContainer = styled.div`\r\n  grid-area: Tags;\r\n  display: flex;\r\n  flex-wrap: wrap-reverse;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Tags = styled.span`\r\n  color: #2c3e50;\r\n  border: 2px solid #2c3e50;\r\n  font-size: 1.25rem;\r\n  font-weight: 900;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 3px;\r\n  margin: 0.2rem 0.2rem;\r\n\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 1.2rem;\r\n    border: 1px solid #2c3e50;\r\n    font-weight: 500;\r\n    margin: 0.15rem 0.15rem;\r\n  }\r\n`;\r\n\r\nconst TimeContainer = styled.div`\r\n  grid-area: Time;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.45rem;\r\n  min-width: 3.6rem;\r\n  color: #7f8c8d;\r\n  text-align: center;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst JobCard = ({\r\n  id,\r\n  thumb,\r\n  company,\r\n  jobTitle,\r\n  location,\r\n  salary,\r\n  tags,\r\n  timestamp,\r\n  active,\r\n  description,\r\n  handleActiveChange,\r\n  apply,\r\n  cbFunc,\r\n}) => {\r\n  const today = new Date();\r\n  const jobDate = new Date(timestamp);\r\n\r\n  const time = getDateDiff(jobDate, today);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <JobCardContainer\r\n        ref={cbFunc}\r\n        active={active === id}\r\n        onClick={handleActiveChange}\r\n        data-testid=\"jobcard\"\r\n      >\r\n        <CompanyThumbContainer>\r\n          {thumb ? (\r\n            <CompanyThumbImg src={thumb} alt={`${company} logo`} />\r\n          ) : (\r\n            setCompanyLogoFromName(company)\r\n          )}\r\n        </CompanyThumbContainer>\r\n        <JobInfoContainer>\r\n          <h3>{company}</h3>\r\n          <h2>{jobTitle}</h2>\r\n          <h4>{location}</h4>\r\n        </JobInfoContainer>\r\n        <SalaryContainer>{salary}</SalaryContainer>\r\n        <TagsContainer>\r\n          {tags.map((tag) => (\r\n            <Tags key={tag} name={tag.toLowerCase()} children={tag} />\r\n          ))}\r\n        </TagsContainer>\r\n        <TimeContainer>{time !== 0 ? `${time}d` : 'today'}</TimeContainer>\r\n      </JobCardContainer>\r\n      {active === id && <JobDescription apply={apply} data={description} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(JobCard);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr 2fr;\r\n  grid-template-rows: 1fr;\r\n  grid-template-areas: 'Thumb Info Tags';\r\n  gap: 15px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ecf0f1;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-areas:\r\n      'Thumb Info '\r\n      'Thumb Tags';\r\n\r\n    gap: 10px;\r\n    row-gap: 5px;\r\n  }\r\n`;\r\n\r\nconst Thumb = styled.div`\r\n  grid-area: Thumb;\r\n  width: 50px;\r\n  height: 61px;\r\n  border-radius: 3px;\r\n  background: linear-gradient(90deg, #ecf0f1, #b6c1c5);\r\n  background-size: 200% 100%;\r\n  animation: change 2s ease-in-out infinite;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 40px;\r\n    height: 50px;\r\n  }\r\n\r\n  @keyframes change {\r\n    0% {\r\n      background-position: 0 0;\r\n    }\r\n    50% {\r\n      background-position: 100% 0;\r\n    }\r\n    100% {\r\n      background-position: 0 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  grid-area: Info;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  font-size: 10px;\r\n  width: ${({ width }) => `${width}px`};\r\n  height: ${({ height }) => `${height}px`};\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(90deg, #ecf0f1, #b6c1c5);\r\n  background-size: 200% 100%;\r\n  animation: change 2s ease-in-out infinite;\r\n\r\n  @media (max-width: 600px) {\r\n    margin: 2px 0;\r\n    margin-right: auto;\r\n    height: 90%;\r\n  }\r\n\r\n  @keyframes change {\r\n    0% {\r\n      background-position: 0 0;\r\n    }\r\n    50% {\r\n      background-position: 100% 0;\r\n    }\r\n    100% {\r\n      background-position: 0 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagsContainer = styled.div`\r\n  grid-area: Tags;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 600px) {\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin: 2px;\r\n  height: 20px;\r\n  width: 50px;\r\n  display: inline-block;\r\n  background: linear-gradient(90deg, #ecf0f1, #b6c1c5);\r\n  background-size: 200% 100%;\r\n  animation: change 2s ease-in-out infinite;\r\n\r\n  @media (max-width: 600px) {\r\n    height: 15px;\r\n    width: 40px;\r\n  }\r\n\r\n  @keyframes change {\r\n    0% {\r\n      background-position: 0 0;\r\n    }\r\n    50% {\r\n      background-position: 100% 0;\r\n    }\r\n    100% {\r\n      background-position: 0 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SkeletonJobCard = () => {\r\n  return (\r\n    <StyledDiv data-testid=\"jobcard skeleton\">\r\n      <Thumb />\r\n      <InfoContainer>\r\n        <Row width={150} height={10} />\r\n        <Row width={300} height={16} />\r\n        <Row width={120} height={9} />\r\n      </InfoContainer>\r\n      <TagsContainer>\r\n        <Tag />\r\n        <Tag />\r\n        <Tag />\r\n      </TagsContainer>\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nconst ThreeSkeletonJobCards = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SkeletonJobCard />\r\n      <SkeletonJobCard />\r\n      <SkeletonJobCard />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ThreeSkeletonJobCards;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport JobCard from './JobCard';\r\nimport ThreeSkeletonJobCard from './Skeletons/SkeletonJobCard';\r\n\r\nconst JobsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 2rem;\r\n  max-width: 1000px;\r\n`;\r\n\r\nconst JobListTitle = styled.h2`\r\n  align-self: flex-start;\r\n  font-weight: 900;\r\n  font-size: 2.5rem;\r\n  margin: 15px auto;\r\n  margin-left: 2.5rem;\r\n\r\n  span {\r\n    color: #7f8c8d;\r\n    font-weight: 100;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    margin: 1.5rem auto;\r\n  }\r\n`;\r\n\r\nconst JobList = ({ jobs, loading, hasMore, dispatchJobsFetch, totalRows }) => {\r\n  const [isActive, setIsActive] = useState(null);\r\n\r\n  const observer = useRef();\r\n\r\n  const lastJobCardRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          dispatchJobsFetch({ type: 'LOAD_MORE_JOBS' });\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [loading, hasMore]\r\n  );\r\n\r\n  const handleActiveChange = useCallback(\r\n    (jobId) => {\r\n      if (isActive === jobId) {\r\n        setIsActive(null);\r\n      } else {\r\n        setIsActive(jobId);\r\n      }\r\n    },\r\n    [isActive]\r\n  );\r\n\r\n  console.log('List: render');\r\n\r\n  return (\r\n    <JobsContainer role=\"container\">\r\n      <JobListTitle>\r\n        Latest jobs <span>({totalRows})</span>\r\n      </JobListTitle>\r\n      {jobs.map((job, index) => {\r\n        if (\r\n          (jobs.length > 5 && jobs.length === index + 5) ||\r\n          (jobs.length <= 5 && jobs.length === index + 1)\r\n        ) {\r\n          return (\r\n            <JobCard\r\n              cbFunc={lastJobCardRef}\r\n              key={job.id}\r\n              thumb={job.company_logo}\r\n              company={job.company_name}\r\n              jobTitle={job.job_title}\r\n              location={job.location}\r\n              tags={job.tags}\r\n              timestamp={job.timestamp}\r\n              salary={job.salary}\r\n              active={isActive}\r\n              handleActiveChange={() => handleActiveChange(job.id)}\r\n              description={job.content_html}\r\n              id={job.id}\r\n              apply={job.apply_link}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <JobCard\r\n              key={job.id}\r\n              thumb={job.company_logo}\r\n              company={job.company_name}\r\n              jobTitle={job.job_title}\r\n              location={job.location}\r\n              tags={job.tags}\r\n              timestamp={job.timestamp}\r\n              salary={job.salary}\r\n              active={isActive}\r\n              handleActiveChange={() => handleActiveChange(job.id)}\r\n              description={job.content_html}\r\n              id={job.id}\r\n              apply={job.apply_link}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n      {loading && <ThreeSkeletonJobCard />}\r\n    </JobsContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(JobList);\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n  font-size: 2rem;\r\n  width: auto;\r\n  margin-top: -4rem;\r\n\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst HeroInput = styled.input`\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  border: none;\r\n  width: 25rem;\r\n  height: 5rem;\r\n  padding: 0 1rem;\r\n  text-align: left;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  outline: none;\r\n`;\r\n\r\nconst InputBtn = styled.button`\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  cursor: pointer;\r\n  background-color: #e6e6e6;\r\n  outline: none;\r\n  border: none;\r\n  width: 5rem;\r\n  height: 5rem;\r\n`;\r\n\r\nconst FlexForm = styled.form`\r\n  display: flex;\r\n`;\r\n\r\nconst CitySelect = styled.select`\r\n  border-radius: 3px;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  outline: none;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  height: 5rem;\r\n  margin-left: 1rem;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n    margin: auto;\r\n    margin-top: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Search = ({ placeholder, city, handleSearch, handleCitySelection }) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const onCityChange = (event) => {\r\n    setSearch('');\r\n    handleCitySelection(event);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    handleSearch(event);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FlexForm data-testid=\"keyword-form\" onSubmit={onSubmit}>\r\n        <HeroInput\r\n          aria-label=\"keyword input\"\r\n          name=\"tech\"\r\n          value={search}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n        />\r\n        <InputBtn aria-label=\"search keyword\">\r\n          <svg\r\n            aria-label=\"search button\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"black\"\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n          >\r\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          </svg>\r\n        </InputBtn>\r\n      </FlexForm>\r\n      <CitySelect aria-label=\"select city\" id=\"cityDopdown\" onChange={onCityChange} value={city}>\r\n        <option value=\"sydney\">Sydney</option>\r\n        <option value=\"melbourne\">Melbourne</option>\r\n      </CitySelect>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Search from './Search';\r\nimport { RegularButton } from './Button';\r\n\r\nconst HeroContainer = styled.div`\r\n  width: 100%;\r\n  height: 35vh;\r\n  min-height: 20rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  /* background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.5)),\r\n    url('/assets/mel-hero.jpg'); */\r\n  background-image: ${({\r\n    city,\r\n  }) => `linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.5)),\r\n    url('/assets/${city}-hero.jpg');`};\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  position: relative;\r\n`;\r\n\r\nconst HeroTitle = styled.h1`\r\n  font-size: 5rem;\r\n  font-weight: 900;\r\n  color: #f0db4f;\r\n  margin-top: -4rem;\r\n\r\n  a,\r\n  a:link,\r\n  a:visited,\r\n  a:hover,\r\n  a:active {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  span {\r\n    color: #fff;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 2rem;\r\n\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Hero = ({ handleSearch, city, handleCitySelection }) => {\r\n  return (\r\n    <HeroContainer role=\"container\" city={city}>\r\n      <HeroTitle>\r\n        <a href=\"/\">\r\n          JavaScript <span>Jobs</span>\r\n        </a>\r\n      </HeroTitle>\r\n      <Search\r\n        placeholder=\"Enter a keyword\"\r\n        city={city}\r\n        handleSearch={handleSearch}\r\n        handleCitySelection={handleCitySelection}\r\n      />\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(Hero);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { techFilters } from '../utils/helpers';\r\n\r\nconst StyledNav = styled.nav`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  max-width: 900px;\r\n  overflow-x: auto;\r\n  margin: 2rem auto 0 auto;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst TechContainer = styled.div`\r\n  max-width: 120px;\r\n  min-width: 80px;\r\n  flex: 1 1 0;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: 0.1s ease-out;\r\n  padding: 5px 0 0 0;\r\n  margin: 0 2px 0 2px;\r\n  border-radius: 3px;\r\n  &:first-child {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      transform: scale(0.95);\r\n      background-color: #ecf0f1;\r\n    }\r\n  }\r\n\r\n  &.active {\r\n    transform: scale(0.95);\r\n    background-color: #ecf0f1;\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  span {\r\n    font-weight: 600;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Tech = ({ imgSrc, tech, handleFilters, filter }) => {\r\n  return (\r\n    <TechContainer\r\n      onClick={() => handleFilters(tech.toLowerCase())}\r\n      className={filter.includes(tech.toLowerCase()) && 'active'}\r\n    >\r\n      <div>\r\n        <img src={imgSrc} alt={`${tech} logo`} />\r\n      </div>\r\n      <span>{tech}</span>\r\n    </TechContainer>\r\n  );\r\n};\r\n\r\nconst Nav = ({ handleFilters, filter }) => {\r\n  const logosSrc = [...techFilters];\r\n\r\n  return (\r\n    <StyledNav>\r\n      {logosSrc.map((logo) => {\r\n        return (\r\n          <Tech\r\n            key={logo}\r\n            imgSrc={`assets/logos/${logo}.svg`}\r\n            tech={`${logo}`}\r\n            handleFilters={handleFilters}\r\n            filter={filter}\r\n          />\r\n        );\r\n      })}\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchGuideContainer = styled.div`\r\n  max-width: 900px;\r\n  margin: 3rem auto 1rem auto;\r\n  font-size: 1.8rem;\r\n  font-weight: 900;\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SearchSpan = styled.span`\r\n  border-radius: 3px;\r\n  font-size: 1.25rem;\r\n  margin-left: 0.4rem;\r\n  padding: 0.25rem 0.5rem;\r\n  background: black;\r\n  border: 2px solid #2c3e50;\r\n  background-color: transparent;\r\n  color: #2c3e50;\r\n  cursor: pointer;\r\n  transition: 0.1s ease-out;\r\n\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  span {\r\n    padding-left: 5px;\r\n    font-size: 1rem;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    transition: 0.1s ease-out;\r\n  }\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      span {\r\n        color: red;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchGuide = ({ filter, handleTagRemove }) => {\r\n  return (\r\n    <SearchGuideContainer>\r\n      Searching for:\r\n      {filter.map((value) => {\r\n        return (\r\n          <SearchSpan\r\n            key={value}\r\n            onClick={() => handleTagRemove(value)}\r\n            data-testid=\"tech filter\"\r\n          >\r\n            {value}\r\n            <span>X</span>\r\n          </SearchSpan>\r\n        );\r\n      })}\r\n    </SearchGuideContainer>\r\n  );\r\n};\r\n\r\nexport default SearchGuide;\r\n","import React, { useCallback } from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport { useJobsFetch } from './hooks/useJobsFetch';\nimport JobList from './components/JobList';\nimport Hero from './components/Hero';\nimport Nav from './components/Nav';\nimport SearchGuide from './components/SearchGuide';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: 'IBM Plex Sans', sans-serif;\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body, h1, h2, h3, h4, h5, h6, p, ol, ul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n\nfunction App() {\n  const { jobs, isLoading, hasMore, isError, city, dispatchJobsFetch, filters, totalRows } = useJobsFetch();\n\n  const handleSearch = useCallback(\n    (event) => {\n      event.preventDefault();\n      const value = event.target.tech.value;\n      dispatchJobsFetch({\n        type: 'SEARCH',\n        payload: value,\n      });\n    },\n    [dispatchJobsFetch]\n  );\n\n  const handleFilters = (value) => {\n    dispatchJobsFetch({\n      type: 'CHANGE_FILTERS',\n      payload: value,\n    });\n  };\n\n  const handleCitySelection = useCallback(\n    (event) => {\n      dispatchJobsFetch({\n        type: 'CHANGE_CITY',\n        payload: { city: event.target.value },\n      });\n    },\n    [dispatchJobsFetch]\n  );\n\n  console.log('App: render');\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Hero handleSearch={handleSearch} handleCitySelection={handleCitySelection} city={city} />\n      <Nav handleFilters={handleFilters} filter={filters} />\n      {Boolean(filters.length) && <SearchGuide handleTagRemove={handleFilters} filter={filters} />}\n      <JobList\n        jobs={jobs}\n        loading={isLoading}\n        hasMore={hasMore}\n        dispatchJobsFetch={dispatchJobsFetch}\n        totalRows={totalRows}\n      />\n      {isError && <h3>Something went wrong. Please refresh</h3>}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}